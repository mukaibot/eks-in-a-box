---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS Access'

Parameters:
  AllowAccessFromIAMRole:
    Type: String
    Description: Which IAM role allows you to assume the role that grants access to the cluster
  ClusterName:
    Type: String
    Description: Name of the EKS cluster
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC Id for the cluster

Resources:
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows accessing the EKS Kubernetes API externally
      VpcId: !Ref VpcId

  ClusterRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Join [ "-", [!Ref ClusterName, "admin"]]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            AWS: !Ref AllowAccessFromIAMRole
          Action:
          - "sts:AssumeRole"
        -
          Effect: "Allow"
          Principal:
            Service:
            - "eks.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
      - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
      - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
      - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy

Outputs:
  SecurityGroup:
    Description: Grants access to the Kubernetes API
    Value: !Ref ControlPlaneSecurityGroup

  RoleArn:
    Description: Assuming this role grants admin access to the cluster
    Value: !GetAtt ClusterRole.Arn

